<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20224.22.1117.1841                               -->
<workbook original-version='18.1' source-build='2022.4.0 (20224.22.1117.1841)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (HPlus Data)' inline='true' name='federated.1x6cubr00mg3u815qx6kx1jxq2kk' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='HPlus Data' name='excel-direct.12eps0k07r16331e2vn9o1umpibr'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='/Users/manojmahendra/Desktop/tab-excerise/Chapter06/HPlus Data.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.12eps0k07r16331e2vn9o1umpibr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:R5131:no:A1:R5131:0' header='yes' outcome='2'>
            <column datatype='integer' name='EmpID' ordinal='0' />
            <column datatype='string' name='Employee Name' ordinal='1' />
            <column datatype='string' name='Employee Job Title' ordinal='2' />
            <column datatype='string' name='Sales Region' ordinal='3' />
            <column datatype='integer' name='OrderNum' ordinal='4' />
            <column datatype='date' name='OrderDate' ordinal='5' />
            <column datatype='string' name='OrderType' ordinal='6' />
            <column datatype='string' name='CustomerType' ordinal='7' />
            <column datatype='integer' name='Customer ID' ordinal='8' />
            <column datatype='string' name='CustName' ordinal='9' />
            <column datatype='string' name='CustState' ordinal='10' />
            <column datatype='string' name='ProdCategory' ordinal='11' />
            <column datatype='string' name='ProdNumber' ordinal='12' />
            <column datatype='string' name='ProdName' ordinal='13' />
            <column datatype='integer' name='Quantity' ordinal='14' />
            <column datatype='real' name='Price' ordinal='15' />
            <column datatype='real' name='Discount' ordinal='16' />
            <column datatype='real' name='Order Total' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.12eps0k07r16331e2vn9o1umpibr' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:R5131:no:A1:R5131:0' header='yes' outcome='2'>
            <column datatype='integer' name='EmpID' ordinal='0' />
            <column datatype='string' name='Employee Name' ordinal='1' />
            <column datatype='string' name='Employee Job Title' ordinal='2' />
            <column datatype='string' name='Sales Region' ordinal='3' />
            <column datatype='integer' name='OrderNum' ordinal='4' />
            <column datatype='date' name='OrderDate' ordinal='5' />
            <column datatype='string' name='OrderType' ordinal='6' />
            <column datatype='string' name='CustomerType' ordinal='7' />
            <column datatype='integer' name='Customer ID' ordinal='8' />
            <column datatype='string' name='CustName' ordinal='9' />
            <column datatype='string' name='CustState' ordinal='10' />
            <column datatype='string' name='ProdCategory' ordinal='11' />
            <column datatype='string' name='ProdNumber' ordinal='12' />
            <column datatype='string' name='ProdName' ordinal='13' />
            <column datatype='integer' name='Quantity' ordinal='14' />
            <column datatype='real' name='Price' ordinal='15' />
            <column datatype='real' name='Discount' ordinal='16' />
            <column datatype='real' name='Order Total' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R5131:no:A1:R5131:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>EmpID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[EmpID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>EmpID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employee Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employee Name]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Employee Name</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Employee Job Title</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Employee Job Title]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Employee Job Title</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sales Region]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sales Region</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderNum</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OrderNum]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OrderNum</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderDate</remote-name>
            <remote-type>7</remote-type>
            <local-name>[OrderDate]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OrderDate</remote-alias>
            <ordinal>5</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OrderType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[OrderType]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OrderType</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustomerType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustomerType]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CustomerType</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustName]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CustName</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>CustState</remote-name>
            <remote-type>130</remote-type>
            <local-name>[CustState]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>CustState</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProdCategory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProdCategory]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ProdCategory</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProdNumber</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProdNumber]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ProdNumber</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProdName</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProdName]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ProdName</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Price]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Price</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Total</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Order Total]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Order Total</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_2ACDC4980923407782117206755D3A5B]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Cust Name' datatype='string' name='[CustName]' role='dimension' type='nominal' />
      <column caption='Cust State' datatype='string' name='[CustState]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column caption='Customer Type' datatype='string' name='[CustomerType]' role='dimension' type='nominal' />
      <column caption='Emp ID' datatype='integer' name='[EmpID]' role='dimension' type='ordinal' />
      <column caption='Order Date' datatype='date' name='[OrderDate]' role='dimension' type='ordinal' />
      <column caption='Order Num' datatype='integer' name='[OrderNum]' role='dimension' type='ordinal' />
      <column caption='Order Type' datatype='string' name='[OrderType]' role='dimension' type='nominal' />
      <column caption='Prod Category' datatype='string' name='[ProdCategory]' role='dimension' type='nominal' />
      <column caption='Prod Name' datatype='string' name='[ProdName]' role='dimension' type='nominal' />
      <column caption='Prod Number' datatype='string' name='[ProdNumber]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_2ACDC4980923407782117206755D3A5B]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_2ACDC4980923407782117206755D3A5B'>
            <properties context=''>
              <relation connection='excel-direct.12eps0k07r16331e2vn9o1umpibr' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:R5131:no:A1:R5131:0' header='yes' outcome='2'>
                  <column datatype='integer' name='EmpID' ordinal='0' />
                  <column datatype='string' name='Employee Name' ordinal='1' />
                  <column datatype='string' name='Employee Job Title' ordinal='2' />
                  <column datatype='string' name='Sales Region' ordinal='3' />
                  <column datatype='integer' name='OrderNum' ordinal='4' />
                  <column datatype='date' name='OrderDate' ordinal='5' />
                  <column datatype='string' name='OrderType' ordinal='6' />
                  <column datatype='string' name='CustomerType' ordinal='7' />
                  <column datatype='integer' name='Customer ID' ordinal='8' />
                  <column datatype='string' name='CustName' ordinal='9' />
                  <column datatype='string' name='CustState' ordinal='10' />
                  <column datatype='string' name='ProdCategory' ordinal='11' />
                  <column datatype='string' name='ProdNumber' ordinal='12' />
                  <column datatype='string' name='ProdName' ordinal='13' />
                  <column datatype='integer' name='Quantity' ordinal='14' />
                  <column datatype='real' name='Price' ordinal='15' />
                  <column datatype='real' name='Discount' ordinal='16' />
                  <column datatype='real' name='Order Total' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_worldwide (covid_worldwide) (2)' inline='true' name='federated.1ygvu7u1198b1e110euyp0yn4gnn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_worldwide' name='excel-direct.1nx3xtd0ggtfw911stw3y0u0jkvj'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='/Users/manojmahendra/Desktop/covid_worldwide.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1nx3xtd0ggtfw911stw3y0u0jkvj' name='covid_worldwide' table='[covid_worldwide$]' type='table'>
          <columns gridOrigin='A1:I232:no:A1:I232:1' header='yes' lost='0' outcome='1' processed='1781'>
            <column datatype='integer' name='Serial Number' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Total Cases' ordinal='2' />
            <column datatype='integer' name='Total Deaths' ordinal='3' />
            <column datatype='integer' name='Total Recovered' ordinal='4' />
            <column datatype='integer' name='Active Cases' ordinal='5' />
            <column datatype='integer' name='Total Test' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='date' name='Date' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1nx3xtd0ggtfw911stw3y0u0jkvj' name='covid_worldwide' table='[covid_worldwide$]' type='table'>
          <columns gridOrigin='A1:I232:no:A1:I232:1' header='yes' lost='0' outcome='1' processed='1781'>
            <column datatype='integer' name='Serial Number' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Total Cases' ordinal='2' />
            <column datatype='integer' name='Total Deaths' ordinal='3' />
            <column datatype='integer' name='Total Recovered' ordinal='4' />
            <column datatype='integer' name='Active Cases' ordinal='5' />
            <column datatype='integer' name='Total Test' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='date' name='Date' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I232:no:A1:I232:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1781</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serial Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serial Number]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Serial Number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Test</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Test]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Test</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
          <bin default-name='true' value='&quot;China, India, Myanmar and 3 more&quot;'>
            <value>&quot;China&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Cura√ßao&quot;' value='&quot;Curaçao&quot;' />
          <semantic-value key='&quot;Diamond Princess&quot;' value='&quot;Djibouti&quot;' />
          <semantic-value key='&quot;MS Zaandam&quot;' value='&quot;Montserrat&quot;' />
          <semantic-value key='&quot;R√©union&quot;' value='&quot;Reunion&quot;' />
          <semantic-value key='&quot;S. Korea&quot;' value='&quot;South Korea&quot;' />
        </semantic-values>
      </column>
      <column aggregation='None' datatype='integer' name='[Population (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='7' formula='[Population]' peg='0' size='6.5427e+07' />
      </column>
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Serial Number]' role='dimension' type='ordinal' />
      <column aggregation='None' datatype='integer' name='[Total Cases (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Total Cases]' peg='0' size='4.83322e+06' />
      </column>
      <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
      <column aggregation='None' datatype='integer' name='[Total Recovered (bin)]' role='dimension' type='quantitative'>
        <calculation class='bin' decimals='6' formula='[Total Recovered]' peg='0' size='4.83733e+06' />
      </column>
      <column datatype='integer' name='[Total Recovered]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_worldwide' datatype='table' name='[__tableau_internal_object_id__].[covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Country (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;China, India, Myanmar and 3 more&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>&quot;Other&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_worldwide' id='covid!worldwide_CD89ECDD1C97418F9CB47EDF893CC564'>
            <properties context=''>
              <relation connection='excel-direct.1nx3xtd0ggtfw911stw3y0u0jkvj' name='covid_worldwide' table='[covid_worldwide$]' type='table'>
                <columns gridOrigin='A1:I232:no:A1:I232:1' header='yes' lost='0' outcome='1' processed='1781'>
                  <column datatype='integer' name='Serial Number' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Total Cases' ordinal='2' />
                  <column datatype='integer' name='Total Deaths' ordinal='3' />
                  <column datatype='integer' name='Total Recovered' ordinal='4' />
                  <column datatype='integer' name='Active Cases' ordinal='5' />
                  <column datatype='integer' name='Total Test' ordinal='6' />
                  <column datatype='integer' name='Population' ordinal='7' />
                  <column datatype='date' name='Date' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='covid_worldwide (covid_worldwide)' inline='true' name='federated.19ak0ya1jyc6sb127f9ig03qt5k5' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_worldwide' name='excel-direct.1grn31m010nd7219kfhks19zeo0l'>
            <connection class='excel-direct' cleaning='yes' compat='no' dataRefreshTime='' filename='/Users/manojmahendra/Desktop/covid_worldwide.xlsx' interpretationMode='1' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1grn31m010nd7219kfhks19zeo0l' name='covid_worldwide' table='[covid_worldwide$]' type='table'>
          <columns gridOrigin='A1:I232:no:A1:I232:1' header='yes' lost='0' outcome='1' processed='1781'>
            <column datatype='integer' name='Serial Number' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Total Cases' ordinal='2' />
            <column datatype='integer' name='Total Deaths' ordinal='3' />
            <column datatype='integer' name='Total Recovered' ordinal='4' />
            <column datatype='integer' name='Active Cases' ordinal='5' />
            <column datatype='integer' name='Total Test' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='date' name='Date' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1grn31m010nd7219kfhks19zeo0l' name='covid_worldwide' table='[covid_worldwide$]' type='table'>
          <columns gridOrigin='A1:I232:no:A1:I232:1' header='yes' lost='0' outcome='1' processed='1781'>
            <column datatype='integer' name='Serial Number' ordinal='0' />
            <column datatype='string' name='Country' ordinal='1' />
            <column datatype='integer' name='Total Cases' ordinal='2' />
            <column datatype='integer' name='Total Deaths' ordinal='3' />
            <column datatype='integer' name='Total Recovered' ordinal='4' />
            <column datatype='integer' name='Active Cases' ordinal='5' />
            <column datatype='integer' name='Total Test' ordinal='6' />
            <column datatype='integer' name='Population' ordinal='7' />
            <column datatype='date' name='Date' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I232:no:A1:I232:1&quot;</attribute>
              <attribute datatype='integer' name='lost'>0</attribute>
              <attribute datatype='integer' name='outcome'>1</attribute>
              <attribute datatype='integer' name='processed'>1781</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Serial Number</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Serial Number]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Serial Number</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RGB_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Cases]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Deaths]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Recovered</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Recovered]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Recovered</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Active Cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Active Cases]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Active Cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total Test</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Total Test]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Total Test</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[covid_worldwide]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>8</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Recovered cases mopre than &gt;=5000000' datatype='boolean' name='[Calculation_118993547071758336]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Total Recovered]&gt;= 5000000  AND [Active Cases]&gt;= 1000' />
      </column>
      <column caption='Calculation1' datatype='boolean' name='[Calculation_118993547085471745]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Total Cases] &gt;=300000' />
      </column>
      <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <calculation class='categorical-bin' column='[Country]' new-bin='true'>
          <bin default-name='true' value='&quot;Afghanistan, Armenia, Azerbaijan and 39 more&quot;'>
            <value>&quot;Afghanistan&quot;</value>
            <value>&quot;Armenia&quot;</value>
            <value>&quot;Azerbaijan&quot;</value>
            <value>&quot;Bahrain&quot;</value>
            <value>&quot;Bangladesh&quot;</value>
            <value>&quot;Bhutan&quot;</value>
            <value>&quot;Cambodia&quot;</value>
            <value>&quot;China&quot;</value>
            <value>&quot;Cyprus&quot;</value>
            <value>&quot;India&quot;</value>
            <value>&quot;Indonesia&quot;</value>
            <value>&quot;Iran&quot;</value>
            <value>&quot;Iraq&quot;</value>
            <value>&quot;Japan&quot;</value>
            <value>&quot;Jordan&quot;</value>
            <value>&quot;Kuwait&quot;</value>
            <value>&quot;Kyrgyzstan&quot;</value>
            <value>&quot;Laos&quot;</value>
            <value>&quot;Lebanon&quot;</value>
            <value>&quot;Malaysia&quot;</value>
            <value>&quot;Maldives&quot;</value>
            <value>&quot;Mongolia&quot;</value>
            <value>&quot;Myanmar&quot;</value>
            <value>&quot;Nepal&quot;</value>
            <value>&quot;Oman&quot;</value>
            <value>&quot;Pakistan&quot;</value>
            <value>&quot;Palestine&quot;</value>
            <value>&quot;Philippines&quot;</value>
            <value>&quot;Qatar&quot;</value>
            <value>&quot;Russia&quot;</value>
            <value>&quot;Saudi Arabia&quot;</value>
            <value>&quot;Singapore&quot;</value>
            <value>&quot;Sri Lanka&quot;</value>
            <value>&quot;Syria&quot;</value>
            <value>&quot;Taiwan&quot;</value>
            <value>&quot;Tajikistan&quot;</value>
            <value>&quot;Thailand&quot;</value>
            <value>&quot;Timor-Leste&quot;</value>
            <value>&quot;Turkey&quot;</value>
            <value>&quot;UAE&quot;</value>
            <value>&quot;Uzbekistan&quot;</value>
            <value>&quot;Vietnam&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Serial Number]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Total Test]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_worldwide' datatype='table' name='[__tableau_internal_object_id__].[covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA]' role='measure' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Total Test]' derivation='Sum' name='[sum:Total Test:qk]' pivot='key' type='quantitative' />
      <group caption='european countries' name='[Country (group) Set 2]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='union'>
          <groupfilter function='member' level='[Country (group)]' member='&quot;Albania&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Andorra&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Austria&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Belarus&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Belgium&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Bosnia and Herzegovina&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Bulgaria&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Croatia&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Czechia&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Denmark&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Estonia&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Finland&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;France&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Germany&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Greece&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Hungary&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Iceland&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Ireland&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Italy&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Latvia&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Liechtenstein&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Lithuania&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Moldova&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Monaco&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Netherlands&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Poland&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Portugal&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Romania&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;San Marino&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Serbia&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Slovakia&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;Switzerland&quot;' />
          <groupfilter function='member' level='[Country (group)]' member='&quot;UK&quot;' />
        </groupfilter>
      </group>
      <group caption='Country (group) Set' name='[Country (group) Set]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[Country (group)]' member='&quot;Afghanistan, Armenia, Azerbaijan and 39 more&quot;' />
      </group>
      <group name='[asian countries (copy)]' name-style='unqualified' user:ui-builder='lasso-group'>
        <groupfilter function='member' level='[Country (group)]' member='&quot;Afghanistan, Armenia, Azerbaijan and 39 more&quot;' />
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Population:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Test:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Deaths:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Cases:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United Kingdom&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_worldwide' id='covid!worldwide_97F5B7EA42114DBAB2F4B3B04ACBE9CA'>
            <properties context=''>
              <relation connection='excel-direct.1grn31m010nd7219kfhks19zeo0l' name='covid_worldwide' table='[covid_worldwide$]' type='table'>
                <columns gridOrigin='A1:I232:no:A1:I232:1' header='yes' lost='0' outcome='1' processed='1781'>
                  <column datatype='integer' name='Serial Number' ordinal='0' />
                  <column datatype='string' name='Country' ordinal='1' />
                  <column datatype='integer' name='Total Cases' ordinal='2' />
                  <column datatype='integer' name='Total Deaths' ordinal='3' />
                  <column datatype='integer' name='Total Recovered' ordinal='4' />
                  <column datatype='integer' name='Active Cases' ordinal='5' />
                  <column datatype='integer' name='Total Test' ordinal='6' />
                  <column datatype='integer' name='Population' ordinal='7' />
                  <column datatype='date' name='Date' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1_51211315D7B149E6839A543434EF4D5C]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Covid cases around asian countries' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Country (group)' />
        <param name='target' value='Covid cases around asian countries' />
      </command>
    </action>
    <action caption='covid cases around asian counties' name='[Action2_A59E46282AD945FF87D0BE86966862E9]'>
      <activation type='on-select' />
      <source dashboard='Dashboard for covid virus ' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard for covid virus ' />
      </command>
    </action>
    <action caption='Filter by cases' name='[Action3_AAC634ECEE7B48DAA46C4D28C302E3B5]'>
      <source dashboard='Dashboard for covid virus ' type='sheet' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard for covid virus ' />
      </command>
    </action>
    <action caption='Highlightcovidcasesaroundtheworld' name='[Action4_7D8574421CD046828C81A1E986834121]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard for covid virus ' type='sheet' />
      <command command='tsc:brush'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard for covid virus ' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Actice cases and Recovered cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_worldwide (covid_worldwide)' name='federated.19ak0ya1jyc6sb127f9ig03qt5k5' />
          </datasources>
          <datasource-dependencies datasource='federated.19ak0ya1jyc6sb127f9ig03qt5k5'>
            <column datatype='integer' name='[Active Cases]' role='measure' type='quantitative' />
            <column caption='Recovered cases mopre than &gt;=5000000' datatype='boolean' name='[Calculation_118993547071758336]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Total Recovered]&gt;= 5000000  AND [Active Cases]&gt;= 1000' />
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Recovered]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_118993547071758336]' derivation='None' name='[none:Calculation_118993547071758336:nk]' pivot='key' type='nominal' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Active Cases]' derivation='Sum' name='[sum:Active Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Recovered]' derivation='Sum' name='[sum:Total Recovered:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Active Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Recovered:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk] / [federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Calculation_118993547071758336:nk])</rows>
        <cols>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{EBD124A8-51FC-47A7-9F10-4D686E76C6BB}' />
    </worksheet>
    <worksheet name='Covid cases around asian countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_worldwide (covid_worldwide) (2)' name='federated.1ygvu7u1198b1e110euyp0yn4gnn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ygvu7u1198b1e110euyp0yn4gnn'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' default='&quot;Other&quot;' new-bin='true'>
                <bin default-name='true' value='&quot;China, India, Myanmar and 3 more&quot;'>
                  <value>&quot;China&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Cura√ßao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;Diamond Princess&quot;' value='&quot;Djibouti&quot;' />
                <semantic-value key='&quot;MS Zaandam&quot;' value='&quot;Montserrat&quot;' />
                <semantic-value key='&quot;R√©union&quot;' value='&quot;Reunion&quot;' />
                <semantic-value key='&quot;S. Korea&quot;' value='&quot;South Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Test]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Test]' derivation='Sum' name='[sum:Total Test:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Afghanistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Armenia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Azerbaijan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bahrain&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bangladesh&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Bhutan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Cambodia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Diamond Princess&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Djibouti&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;DPRK&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Egypt&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Eritrea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Georgia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Hong Kong&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iran&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Iraq&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Israel&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Japan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Jordan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kazakhstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kuwait&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Kyrgyzstan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Laos&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Lebanon&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Macao&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Mongolia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Myanmar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Nepal&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Oman&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Pakistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Palestine&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Philippines&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Qatar&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;S. Korea&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Saudi Arabia&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Sri Lanka&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Syria&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Taiwan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Tajikistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Thailand&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Turkey&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;UAE&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Uzbekistan&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Vietnam&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Yemen&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Longitude (generated)]' field-type='quantitative' max='14625813.440687427' min='-4234845.3146477286' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Latitude (generated)]' field-type='quantitative' max='16781242.015306599' min='-20273916.206482489' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' value='14' />
            <format attr='text-decoration' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='12' />
            <format attr='text-decoration' value='underline' />
          </style-rule>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='underline' />
            <format attr='color' value='#b07aa1' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='border-style' value='solid' />
            <format attr='background-color' value='#ddebf0' />
            <format attr='border-width' value='2' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='hillshade_highlight_bright' value='true' />
            <format attr='enabled' id='hillshade_highlight_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_faint' value='true' />
            <format attr='enabled' id='hillshade_shadow_med' value='true' />
            <format attr='enabled' id='hillshade_shadow_dark' value='true' />
            <format attr='enabled' id='hillshade_shadow_extreme' value='true' />
            <format attr='enabled' id='marine-label-sm-ln' value='true' />
            <format attr='enabled' id='marine-label-sm-pt' value='true' />
            <format attr='enabled' id='marine-label-md-ln' value='true' />
            <format attr='enabled' id='marine-label-md-pt' value='true' />
            <format attr='enabled' id='marine-label-lg-ln' value='true' />
            <format attr='enabled' id='marine-label-lg-pt' value='true' />
            <format attr='enabled' id='water-label' value='true' />
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Country (group)]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Population:qk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Cases:qk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Deaths:qk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Test:qk]' />
              <geometry column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Geometry (generated)]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Latitude (generated)]</rows>
        <cols>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{52838E55-F317-46A4-BFFD-6818E24CD8FF}' />
    </worksheet>
    <worksheet name='Covid cases around the world'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_worldwide (covid_worldwide) (2)' name='federated.1ygvu7u1198b1e110euyp0yn4gnn' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ygvu7u1198b1e110euyp0yn4gnn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Cura√ßao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;Diamond Princess&quot;' value='&quot;Djibouti&quot;' />
                <semantic-value key='&quot;MS Zaandam&quot;' value='&quot;Montserrat&quot;' />
                <semantic-value key='&quot;R√©union&quot;' value='&quot;Reunion&quot;' />
                <semantic-value key='&quot;S. Korea&quot;' value='&quot;South Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Recovered]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Test]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='None' name='[none:Total Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Test]' derivation='None' name='[none:Total Test:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Population]' derivation='Sum' name='[sum:Population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Recovered]' derivation='Sum' name='[sum:Total Recovered:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Test]' derivation='Sum' name='[sum:Total Test:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Population:qk]' included-values='in-range'>
            <min>4965</min>
            <max>937754783</max>
          </filter>
          <filter class='quantitative' column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]' included-values='in-range'>
            <min>1</min>
            <max>620417</max>
          </filter>
          <filter class='quantitative' column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Test:qk]' included-values='in-range'>
            <min>7850</min>
            <max>874478951</max>
          </filter>
          <filter class='quantitative' column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Recovered:qk]' included-values='in-range'>
            <min>2</min>
            <max>11212773</max>
          </filter>
          <slices>
            <column>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Recovered:qk]</column>
            <column>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]</column>
            <column>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Population:qk]</column>
            <column>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Test:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='color' value='#000000' />
            <format attr='color' data-class='subtotal' value='#000000' />
            <format attr='font-size' value='22' />
            <format attr='text-decoration' value='none' />
            <format attr='text-decoration' data-class='total' value='none' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='color' value='#000000' />
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='underline' />
          </style-rule>
          <style-rule element='title'>
            <format attr='color' value='#d37295' />
            <format attr='font-size' value='16' />
            <format attr='text-decoration' value='underline' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
          <style-rule element='tooltip'>
            <format attr='font-size' value='16' />
            <format attr='text-decoration' value='underline' />
            <format attr='color' value='#e15759' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Population:qk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Deaths:qk]' />
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Test:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk] * [federated.1ygvu7u1198b1e110euyp0yn4gnn].[Latitude (generated)])</rows>
        <cols>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{35B3EB12-1151-4848-8E22-66DE59FA4058}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_worldwide (covid_worldwide)' name='federated.19ak0ya1jyc6sb127f9ig03qt5k5' />
          </datasources>
          <datasource-dependencies datasource='federated.19ak0ya1jyc6sb127f9ig03qt5k5'>
            <column datatype='string' name='[Country (group)]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <calculation class='categorical-bin' column='[Country]' new-bin='true'>
                <bin default-name='true' value='&quot;Afghanistan, Armenia, Azerbaijan and 39 more&quot;'>
                  <value>&quot;Afghanistan&quot;</value>
                  <value>&quot;Armenia&quot;</value>
                  <value>&quot;Azerbaijan&quot;</value>
                  <value>&quot;Bahrain&quot;</value>
                  <value>&quot;Bangladesh&quot;</value>
                  <value>&quot;Bhutan&quot;</value>
                  <value>&quot;Cambodia&quot;</value>
                  <value>&quot;China&quot;</value>
                  <value>&quot;Cyprus&quot;</value>
                  <value>&quot;India&quot;</value>
                  <value>&quot;Indonesia&quot;</value>
                  <value>&quot;Iran&quot;</value>
                  <value>&quot;Iraq&quot;</value>
                  <value>&quot;Japan&quot;</value>
                  <value>&quot;Jordan&quot;</value>
                  <value>&quot;Kuwait&quot;</value>
                  <value>&quot;Kyrgyzstan&quot;</value>
                  <value>&quot;Laos&quot;</value>
                  <value>&quot;Lebanon&quot;</value>
                  <value>&quot;Malaysia&quot;</value>
                  <value>&quot;Maldives&quot;</value>
                  <value>&quot;Mongolia&quot;</value>
                  <value>&quot;Myanmar&quot;</value>
                  <value>&quot;Nepal&quot;</value>
                  <value>&quot;Oman&quot;</value>
                  <value>&quot;Pakistan&quot;</value>
                  <value>&quot;Palestine&quot;</value>
                  <value>&quot;Philippines&quot;</value>
                  <value>&quot;Qatar&quot;</value>
                  <value>&quot;Russia&quot;</value>
                  <value>&quot;Saudi Arabia&quot;</value>
                  <value>&quot;Singapore&quot;</value>
                  <value>&quot;Sri Lanka&quot;</value>
                  <value>&quot;Syria&quot;</value>
                  <value>&quot;Taiwan&quot;</value>
                  <value>&quot;Tajikistan&quot;</value>
                  <value>&quot;Thailand&quot;</value>
                  <value>&quot;Timor-Leste&quot;</value>
                  <value>&quot;Turkey&quot;</value>
                  <value>&quot;UAE&quot;</value>
                  <value>&quot;Uzbekistan&quot;</value>
                  <value>&quot;Vietnam&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column-instance column='[asian countries (copy)]' derivation='InOut' name='[io:asian countries (copy):nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[io:asian countries (copy):nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7521D079-68EF-4044-8B65-D1BAF1094716}' />
    </worksheet>
    <worksheet name='Top 5 Countries with covid Cases'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_worldwide (covid_worldwide)' name='federated.19ak0ya1jyc6sb127f9ig03qt5k5' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.19ak0ya1jyc6sb127f9ig03qt5k5'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Total Cases])' function='order' user:ui-marker='order'>
                <groupfilter expression='SUM([Total Cases]) &gt;= 35000000' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
                  <groupfilter function='level-members' level='[none:Country:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
                </groupfilter>
              </groupfilter>
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Cases:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]' value='23' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-decoration' value='underline' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='title'>
            <format attr='text-decoration' value='underline' />
            <format attr='font-size' value='16' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#59a14f' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Cases:qk]</rows>
        <cols>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</cols>
      </table>
      <simple-id uuid='{734747D3-455D-4FBC-8426-2FFADFB29091}' />
    </worksheet>
    <worksheet name='Total number of deaths in top 5 countries'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_worldwide (covid_worldwide) (2)' name='federated.1ygvu7u1198b1e110euyp0yn4gnn' />
          </datasources>
          <datasource-dependencies datasource='federated.1ygvu7u1198b1e110euyp0yn4gnn'>
            <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Cura√ßao&quot;' value='&quot;Curaçao&quot;' />
                <semantic-value key='&quot;Diamond Princess&quot;' value='&quot;Djibouti&quot;' />
                <semantic-value key='&quot;MS Zaandam&quot;' value='&quot;Montserrat&quot;' />
                <semantic-value key='&quot;R√©union&quot;' value='&quot;Reunion&quot;' />
                <semantic-value key='&quot;S. Korea&quot;' value='&quot;South Korea&quot;' />
              </semantic-values>
            </column>
            <column datatype='integer' name='[Total Cases]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Country]' derivation='None' name='[none:Country:nk]' pivot='key' type='nominal' />
            <column-instance column='[Total Deaths]' derivation='None' name='[none:Total Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total Cases]' derivation='Sum' name='[sum:Total Cases:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Total Deaths]' derivation='Sum' name='[sum:Total Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:Country:nk]' member='&quot;USA&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='title'>
            <format attr='font-weight' value='bold' />
            <format attr='text-decoration' value='underline' />
            <format attr='color' value='#76b7b2' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <lod column='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Deaths:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='shape' value=':filled/circle' />
                <format attr='size' value='1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk] / [federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Cases:ok])</rows>
        <cols>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]</cols>
      </table>
      <simple-id uuid='{2BD193E8-42C4-4984-8600-8C6DF16E5F7B}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid Impact' type='storyboard'>
      <style>
        <style-rule element='table'>
          <format attr='background-color' value='#f9e9e0' />
        </style-rule>
        <style-rule element='story-description'>
          <format attr='font-family' value='Trattatello' />
          <format attr='font-weight' value='bold' />
        </style-rule>
        <style-rule element='story-title'>
          <format attr='font-family' value='Tableau Book' />
          <format attr='color' value='#000000' />
          <format attr='text-align' value='center' />
          <format attr='border-style' value='solid' />
          <format attr='border-width' value='1' />
          <format attr='background-color' value='#f3ebf3' />
        </style-rule>
      </style>
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type-v2='layout-flow' w='98426' x='787' y='830'>
            <zone h='3527' id='3' type-v2='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type-v2='flipboard-nav' w='98426' x='787' y='4357' />
            <zone h='84336' id='5' paired-zone-id='4' removable='false' type-v2='flipboard' w='98426' x='787' y='14834'>
              <flipboard active-id='5' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Covid cases around the world' captured-sheet='Covid cases around the world' id='1' />
                  <story-point caption='Covid cases in Asian counties' captured-sheet='Covid cases around asian countries' id='2' />
                  <story-point caption='Top 5 countries with covid cases ' captured-sheet='Top 5 Countries with covid Cases' id='3'>
                    <capturedDeltas>
                      <worksheet name='Top 5 Countries with covid Cases'>
                        <selection-collection>
                          <tuple-selection>
                            <tuple-reference>
                              <tuple-descriptor>
                                <pane-descriptor>
                                  <x-fields>
                                    <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</field>
                                  </x-fields>
                                  <y-fields>
                                    <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Cases:qk]</field>
                                  </y-fields>
                                </pane-descriptor>
                                <columns>
                                  <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</field>
                                  <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Cases:qk]</field>
                                  <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[:Measure Names]</field>
                                </columns>
                              </tuple-descriptor>
                              <tuple>
                                <value>&quot;USA&quot;</value>
                                <value>104196861</value>
                                <value>&quot;[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[sum:Total Cases:qk]&quot;</value>
                              </tuple>
                            </tuple-reference>
                          </tuple-selection>
                        </selection-collection>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Total number of deaths in top 5 countries' captured-sheet='Total number of deaths in top 5 countries' id='4' />
                  <story-point captured-sheet='Actice cases and Recovered cases' id='5' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{006710B1-0B0A-453F-A395-9583D2AA067C}' />
    </dashboard>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard for covid virus '>
      <style />
      <size maxheight='1000' maxwidth='1300' minheight='1000' minwidth='1300' sizing-mode='fixed' />
      <datasources>
        <datasource caption='covid_worldwide (covid_worldwide) (2)' name='federated.1ygvu7u1198b1e110euyp0yn4gnn' />
      </datasources>
      <datasource-dependencies datasource='federated.1ygvu7u1198b1e110euyp0yn4gnn'>
        <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Total Deaths]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Total Recovered]' role='measure' type='quantitative' />
        <column datatype='integer' name='[Total Test]' role='measure' type='quantitative' />
        <column-instance column='[Population]' derivation='None' name='[none:Population:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Total Deaths]' derivation='None' name='[none:Total Deaths:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Total Test]' derivation='None' name='[none:Total Test:qk]' pivot='key' type='quantitative' />
        <column-instance column='[Total Recovered]' derivation='Sum' name='[sum:Total Recovered:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98400' id='18' param='vert' type-v2='layout-flow' w='98770' x='615' y='800'>
            <zone h='98400' id='7' param='horz' type-v2='layout-flow' w='98770' x='615' y='800'>
              <zone h='98400' id='5' type-v2='layout-basic' w='86462' x='615' y='800'>
                <zone h='49199' id='3' name='Covid cases around the world' w='21613' x='615' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49199' id='12' name='Covid cases around asian countries' w='43236' x='43841' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49201' id='13' name='Top 5 Countries with covid Cases' w='43226' x='615' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49201' id='22' name='Total number of deaths in top 5 countries' w='43236' x='43841' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='49199' id='29' name='Actice cases and Recovered cases' w='21613' x='22228' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone fixed-size='160' h='98400' id='6' is-fixed='true' param='vert' type-v2='layout-flow' w='12308' x='87077' y='800'>
                <zone h='7000' id='8' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Test:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7000' id='9' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Population:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='7800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7000' id='10' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='14800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='7000' id='11' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Recovered:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='21800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone h='5200' id='14' name='Top 5 Countries with covid Cases' param='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]' type-v2='highlighter' w='12308' x='87077' y='28800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1800' minheight='1800' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='35' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98400' id='34' param='vert' type-v2='layout-flow' w='98770' x='615' y='800'>
                <zone h='7000' id='8' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Test:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='9' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Population:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='7800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='10' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='14800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='11' name='Covid cases around the world' param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Recovered:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='12308' x='87077' y='21800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49199' id='3' is-fixed='true' name='Covid cases around the world' w='21613' x='615' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49199' id='29' is-fixed='true' name='Actice cases and Recovered cases' w='21613' x='22228' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49199' id='12' is-fixed='true' name='Covid cases around asian countries' w='43236' x='43841' y='800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5200' id='14' name='Top 5 Countries with covid Cases' param='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]' type-v2='highlighter' w='12308' x='87077' y='28800'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49201' id='13' is-fixed='true' name='Top 5 Countries with covid Cases' w='43226' x='615' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49201' id='22' is-fixed='true' name='Total number of deaths in top 5 countries' w='43236' x='43841' y='49999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8C0F7DE2-D52A-46AF-990A-F79722A237AA}' />
    </dashboard>
  </dashboards>
  <windows source-height='72'>
    <window class='worksheet' name='Covid cases around the world' tab-color='#4f779a'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Test:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Population:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card param='[federated.1ygvu7u1198b1e110euyp0yn4gnn].[sum:Total Recovered:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Population:qk]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Serial Number:ok]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Deaths:qk]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Recovered:nk]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Total Test:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D46D5F52-6165-4B14-9A00-E3C9652BE322}' />
    </window>
    <window class='worksheet' name='Covid cases around asian countries' tab-color='#72bcbb'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card AVG='false' KURTOSIS='false' MAX='false' MEDIAN='false' MIN='false' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1x6cubr00mg3u815qx6kx1jxq2kk].[none:ProdCategory:nk]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[attr:Country:nk]</field>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{4A715BE2-2221-4609-B71E-C66F7F141EA3}' />
    </window>
    <window class='worksheet' maximized='true' name='Top 5 Countries with covid Cases' tab-color='#a65200'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]' type='highlighter' />
            <card AVG='false' KURTOSIS='false' MAX='true' MEDIAN='true' MIN='true' QUART1='false' QUART3='false' SKEWNESS='false' STDEV='false' SUM='true' type='summary' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[:Measure Names]</field>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{008B01E2-DB60-4429-8F2B-81A474977294}' />
    </window>
    <window class='worksheet' name='Total number of deaths in top 5 countries' tab-color='#dec77b'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ygvu7u1198b1e110euyp0yn4gnn].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C59A72F-E802-42E8-ACE0-D06AAD92C371}' />
    </window>
    <window class='worksheet' name='Actice cases and Recovered cases' tab-color='#17927d'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Calculation_118993547071758336:nk]</field>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98F0F7DD-4ABB-4CD5-870B-00F6EB642C32}' />
    </window>
    <window class='dashboard' name='Covid Impact'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{82B59E3E-7187-4C45-8D1E-9F7BCC947211}' />
    </window>
    <window class='dashboard' name='Dashboard for covid virus '>
      <viewpoints>
        <viewpoint name='Actice cases and Recovered cases' />
        <viewpoint name='Covid cases around asian countries'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Covid cases around the world'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Top 5 Countries with covid Cases'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Total number of deaths in top 5 countries' />
      </viewpoints>
      <active id='-1' />
      <device-preview visible='true'>
        <device name='iPhone 7 Plus, 8 Plus' type='Phone' />
      </device-preview>
      <simple-id uuid='{D447D63E-FC76-4FE0-8A7D-E67320C2FAC1}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[Country (group)]</field>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[io:Country (group) Set 2:nk]</field>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[io:Country (group) Set:nk]</field>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Calculation_118993547085471745:nk]</field>
            <field>[federated.19ak0ya1jyc6sb127f9ig03qt5k5].[none:Country:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1C38B94-A6E9-4EC0-B210-87DEF180B94E}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Actice cases and Recovered cases' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid Impact' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Covid cases around asian countries' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid cases around the world' width='192'>
      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
      7u/+LmVZsr+/T9M0PHz4kPv373P37l2MMXz961/n4OCAn/mZn2E2m+G95969e3znO9/hr//6
      r/mXf/mXW/nlJr56DI1yx9stxphz/n8i5djykMdZAW5geEP/kBSCLMvQWvf5/+iahxCw1lLX
      NV3Xje4RQiC8p2oa2q47fwNcZL1eU5blaEVXYboBvhrc5g0wkErJ3fmcXGuebLcE70mE4DgW
      ulT00RMpaZwb3/9VKxEvEkLgg/19DmJs2nVd/3TvOrquG2+DruvQWtM0DXmej+9xvNmwNebV
      WaDFYnGd33/iHcd4z+erVe8SKUUWRyYLKamdY3CArLVwhUO/ixCCzhjWO52dLm6VG8Y4rbVj
      +nW3UOe9R3tP23VTGnTiyyHQ5+draxH02ZZlnlPHdmcpBDLuFHr5cOMrXj8ENlWFyvO+0hwP
      +OB5DM1waZqilMJaO7pCw4qU+/P5ZAATXz4B6Oi7NtMYC9yZzSCm0X0InGy3rF+yEvEyhBA0
      wCwEXHRvTNdhnaOM88td141dn865sRXaWktZluipG3TiTWJiRXiRJIjYKtF5j9aaUkrSLKN1
      jq21rzWbEIBjY1hoDd5jQ2BjbW8QUpLEAf3BLXLOjcP9putQUk4GMPHmGHzwVMqxYNW2Lc65
      PiffdX1rtRBsX/M28MBZ18Hw80JwUtco4E5sg87zvM8AAU3TgBCkMWs0GcDEGyVTilma0jQN
      QgjyWBgTQpBr3a8tVIoiSThrGmxsXHsll7VhK9Uv7FJqNLYQAq0xdMBRmtJNqxEn3jgxR5/n
      OW3bjqtPhvWJUimSeGD3igLrHMd1fWVBjNY5qhDGbXDj3HIcyrHO8ayup60QE28W4z0++uPJ
      7iTZhXkC6A0i0ZqDa7ZPhLh+cXCzhn1EXfT/YdoLNPGGCcBJXXOQJL0PHp/2STysIQTauEE6
      z3O89zy+0E7xutgYYGutqaoKKSWJ1qy3W8o8J4srWSYm3ihV1+GUoihLVOwd62IQq5SiLEuK
      +NRv43aJ67DIsueBd5qSx83XSghkzAZNBjDxVni0XvN0ux1dHyHEmLPf5eLe0NdlGMSx1mLi
      Iq+2bSnLkjTLOGkaztp2MoCJt4cNAeccdV2PY5RD28KwGnF1zZlhIQRrY0jiKpT5fI5SqpcD
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard for covid virus ' width='192'>
      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
    </thumbnail>
    <thumbnail height='64' name='Sheet 6' width='144'>
      iVBORw0KGgoAAAANSUhEUgAAAJAAAABACAYAAAD1eP6XAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAG4ElEQVR4nO3cW0iU2xvH8a/pTOh4xBnNbMKkoqhAhA7iOYLCLqSDghZpKIQlmSFdlFEk
      hRfahXjjTUFBUJiERIWk6ZRKpBBU2AGUakzGUcdymJKZXvfFZs8/0X/mLKsd+/lcybPW+7jQ
      H+ud8V2j39TU1BRC+GjR716A+LNJgIQSCZBQIgESSiRAQokESCiRAAklEiChRAIklEiAhBIJ
      kFAiARJKJEBCiQRIKJEACSUSIKFEAiSUSICEEgmQUCIBEkokQEKJBEgokQAJJRIgoUQCJJRI
      gIQSCZBQEjDXhJ6enl+xDvGH8pN/riBUyC1MKJEACSUSIKFEAvQf9OnTJyYmJmbUW1pa5t1L
      KUDHjh3j9OnTKi3Eb3Dw4EGKiopm1BsaGubdSylAmqahaZpKC/GL9fX1ER8fT2RkJP39/cr9
      5vw70I+yWCw0Njayfv16bt++jcFgoKysjC1btizUtxALoK2tjczMTJxOJ21tbcTHx3vHJicn
      OXv2LF1dXYSHh1NRUcGmTZsAsNls1NTU0NfXx/Llyzl16hSxsbEL9xpodHSU7u5uXr58SV5e
      Hn5+fly6dGmh2osFYrFYSE1NJSMjg7a2tmljHo+HrVu3cvfuXQoLC6msrMTlcqFpGmVlZaSk
      pNDU1ERxcbH3zrNgOxBAVFQUFy9eBMDf358rV64sZHuhqL+/H6PRSEhICCEhIej1eqxWK8uW
      LQPAYDCQlpYGQFZWFk1NTTx9+hSDwUBMTAzZ2dkAJCYmensuaIC+tWiRvMH7t2ltbcXtdntf
      LGuaRltbGwcOHJh1fkJCAqOjozgcDlatWjXrHPkt/4c8ePCAzMxMTCYTJpOJbdu2zbiNfWts
      bIyoqCgiIiIYHx+fdc5P24HEv4vVakWn05GXlzet3tzczPDwMFFRUdPqb9++5cmTJxw/fhxN
      06iursZmsxEdHY3b7cbtdhMUFLSwAfLz85v1a/H7tbe3k5GRMaOekZFBe3s7ubm5TE1NUVRU
      RFBQEFarlZMnTxIcHAxARUUFhw4dIjY2lqGhIaqqqli3bp08jRf/o2kaX758wel0YjKZZmwC
      mqYxMjJCREQEOp0OkOMcQpG8iBZKJEBCiQRIKJnzXZjL5foV6xB/KNmBhBIJkFAiARJKFiRA
      LpeL9+/fy+GyP8TExAROp3NGvbW1dd69lALkcrk4c+YMWVlZ7Nu3jx07dtDY2PhD13o8Hurq
      6hgaGlJZgvBBSUkJR44cmVG/fPnyvHspBai+vp6enh7Onz/PzZs3yc/Pp66uju7u7jmv1TSN
      xsZGbDabyhLEPL169Yq4uDgiIiIYGBhQ7udzgJxOJ/fu3aOgoIDk5GRMJhOFhYUkJiZy48YN
      AO7fv09VVZX3mpaWFqqrq7Hb7Rw9ehSAmpoaDh8+7NP2Keavo6OD1NRU0tPTsVgs08YmJye5
      cOEC2dnZFBQU0Nvb6x0bHh6msrKSnJwcysvL+fDhA6AQIKvVisfjISkpaVp98+bNvHv3DoCR
      kRFev37tHbPb7bx58waDwUB6ejoAGzduJDMzE7PZ7OtSxDx0dnaSnJxMSkrKjAB5PB7S09Np
      amoiPz+fc+fOeY+0njhxgqSkJK5du0ZBQQH/PEL1OUAfP34EICwsbFo9LCwMh8Px3WuDgoLY
      s2cPAOnp6eTk5LB69WpflyJ+0MDAAJGRkQQHB2MymdDpdAwODnrHDQYDycnJ+Pv7s337dsxm
      M8+ePePFixcsWbKEnTt3otPpSEhIIDY2FlA4UBYZGQn8fWotNDTUWx8bG8NoNPraVvxEHR0d
      eDwe74cdNE3DYrHMOGT2jw0bNjA2NobD4WDlypWzzvF5B4qNjUWv1/Po0aNp9a6uLlasWPHD
      fb5+/errEsQ8PXz4kLS0NIxGI0ajkYyMDDo6Ov7v/PHxcUwm08850hoYGEhWVhZXr17FbDaz
      Zs0abt26xfPnz6mtrQX+vlXZbDb6+/uZmJjg8ePH3uv1ej1ms5mWlhbi4uLQ6/WEhIT4uhwx
      h8HBQQICAti7d++0+p07d7Db7ZhMpmn1d+/e0dvbS2lpKZqmUVtb6z36+u2R1jkPlH3vYern
      z5+prq6mvb2dqakpFi9eTElJCbt37wbA4XBQXFyM3W4nNDSUpUuXTttCm5ubaWhoYGJigtLS
      UnJzc3364Yi5Xb9+Hbfbzf79+6fVGxoaiIqKYteuXeTn5xMREUFgYCCDg4OUl5d7P1jY2dlJ
      fX09MTEx2Gw2KisrWbt2rVqAvp0zPDyM2WzG399/2pimaQwODhITE0NAwMwNz+12MzIyQnR0
      tHwU6DfTNI3JyUmcTidGo3HWI62jo6OEh4f/+JFWOc4hvucv97mA67S6lrwAAAAASUVORK5C
      YII=
    </thumbnail>
    <thumbnail height='192' name='Top 5 Countries with covid Cases' width='186'>
      iVBORw0KGgoAAAANSUhEUgAAALoAAADACAYAAACzt3lWAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAOTElEQVR4nO3df0zU9R/A8ecdh3jHwflj2WkSiM2JDAyMH9Wy7LtGjlTadLaprfWHbme2
      pv2TbuZ02QpxLtA0ZzP81cysueZCyRzWGig/VAwTD51i/Aguj3PHgd7d9w/n1cVhBxwQ9349
      /nzz/nw+78/teZ99Ph+Garxerxchwpx2uBcgxFCQ0IUSJHShBAldKEFCF0qQ0IUSJHShBAld
      KEFCF0qQ0IUSJHShBAldKEE33AsQoeHxeNi7dy+nTp2ioaGBxx9/nPT0dFauXEl0dPSQrMHr
      9VJeXo7ZbCYhIWFIjhksuaKHAa/Xy6pVq9ixYwc2m42XXnqJiRMncuTIEex2+5Ctw+Vy8dZb
      b3H06NEhO2aw5IoeBk6fPk15eTlJSUns3LnTdwWvq6sjNja2x3yv14tGoxnqZQ4ruaKHgUOH
      DqHVatm4caPfbUpSUhJGoxEAt9vNrl27WLBgAU8//TTLli2jrKzMN9dqtWKxWCgvL/eNXbly
      BYvFwrlz5wBobm7m0KFDFBQUsGDBAl599VV27doF3P+yvfPOOwCcPHkSi8WCxWLh/PnzAGza
      tImtW7dy9+5dCgsLef311ykpKcFisXDs2DG/8/nmm2+wWCw0NzeH7DOS0Ec4r9dLXV0daWlp
      TJkypdd5H330Ebt37yYyMpL58+fT2NjI6tWrOXPmDAAOh4OKigpaW1t923R0dFBRUYHNZgOg
      s7OTgoICKisrycjIQKvVsnv3bn799VdiY2N59NFHAYiJicFsNmM2m9Hr9QDU1tZSW1vLpk2b
      +OKLL2hsbCQxMZErV66wZ88e/v73PwcOHKC5uRmz2Ryyz0luXUa4trY2Ojs7iYuL63VOa2sr
      3377LbNmzWLnzp1oNBpWrlxJTk4On332Gc8991zQx1u+fDnLly8HoKqqiuXLl3PhwgVee+01
      kpKSOH78ONnZ2axevbrHthcuXMBqtfLxxx/z4osvApCXl8fevXspLy8nOzub3377jevXr7Ny
      5co+fhIPJ1f0Ec5oNKLRaLhz506vc65evYrH4+GFF17w3ZubTCbS09OxWq14PJ4+He+BmJgY
      AIL9a0yDwcCuXbt8kQMsXLgQrVbL119/DcD333+PVqslNzc36DUFQ0If4fR6PRMmTKC2tha3
      2x1wTnd3N0CP14zR0dHcu3cv6FAH6oknnmD69Ol+Y2azmeeff56ysjJaW1spKSkhOzubCRMm
      hPTYEnoYyM3Npbm5mX379vmNezwevF6v7979559/9v3s3r17lJeXM3nyZCIiInzjd+/e7fc6
      dDodOp2OlpaWPm23ePFi3G43GzZsoLW1lfnz5/d7Db2uLeR7FEPujTfe4OTJkxQVFXHx4kVm
      zZrF7du3KSkpoaioiPj4eLKzszl9+jTr168nOzubI0eO4HQ6Wbx4MQCPPfYYWq2Ww4cPA9DY
      2EhpaWmf1hEZGUlWVhZnzpxhz549TJw4kSeffJJJkyY9dLunnnqKxMREKioqiI2NZfbs2f37
      IB5CruhhwGAwUFxcTE5ODmfPnmXr1q18/vnn6PV63+3Khg0bmDlzJsePH2f9+vVcvHiRZcuW
      sWjRIgAeeeQR8vLyuHbtGps3b+a7774jNTUVwO+du1b7VzKB3sUvW7aM+Ph4Pv30U9avX09D
      Q0NQ5/DgC/fyyy8zatSo/n0QD6GRf9clvHg8HhobGzEajYwbN67Hz1taWmhubmbq1Kl+D5YP
      2O122tramDJlil/UffX7778D/OvV/IHi4mI++eQTDh48yLRp0/p93N5I6GJYnT9/noqKCvbt
      28f//vc/3n///UE5joQ+wq1YsWK4lzAg169f5/bt25hMJuLi4tDp/npsfPBb11CQ0MWwcrvd
      aDSaAd0mBUMeRoeI0+kc7iX8J0VERAx65CChC0VI6EIJErpQgoQulCChCyVI6EIJErpQgoQu
      lCChCyVI6EIJErpQgoQulCChCyVI6EIJErpQgoQulCChCyVI6EIJErpQgoQulCChCyVI6EIJ
      ErpQgoQulCChCyVI6EIJErpQgoQulCChCyVI6EIJErpQgoQulCD//eIwuHTp0oC2T05ODtFK
      1CGhD5O1By72a7vNS1JCvBI1yK2LUIKELpQgoQslSOhCCRK6UIKELpQgoQslSOhCCRK6UIKE
      LpQgoQslSOhCCRK6UIKELpQgoQslSOhCCRK6UIKELpQwokO/c+dOrz/zeDzcvHmT9vb2Ac0R
      4WFE/s1ofX09R48epaOjgw8++KDHz61WK9u3byciIgKXy0V8fDwWiwWDwRD0nLa2NtatW4dO
      pyM/P99v2we2bdtGXV0deXl5zJ07d/BOWAzYiLqiOxwOCgsL2bp1K3q9PuCc7u5uCgsLmTNn
      Dvn5+WzZsoXu7m4OHjzYpzkAkZGRJCYmUlNTE3At9fX1JCcn4/V6Q3uiIuRGVOjt7e04HA7W
      rl3LK6+8EnBOdXU10dHRzJs3D4CoqCiWLFlCTU0NnZ2dQc8B0Gq1ZGVlcfbs2YDHmTZtGiaT
      CY1GE+pTFSE2okKfPHky7733HnFxcb3OuXz5MmlpaX5j8fHxxMTEYLVag57zQHp6OlevXu3x
      PFBZWUlGRsZATkcMoREVuk6n+9erp91ux2w29xg3m83Y7fag5zxgMBiYPn06VVVVvjGHw8G1
      a9d6fFnEf9eIfBh9mI6ODoxGY49xo9GIw+EIes7fZWZmUlZWxuzZs4H7ty0zZszo9TnB6XQG
      HA+07/4I1X5UEnah6/V6XC5Xj3GXy+ULM5g5f5eamsr+/fux2+2YTCYqKyt90QcS6A2N0+kk
      JiamL6fSq1DtRyUj6tYlGGPHjsVms/UYt9lsjBkzJug5fxcVFUVKSgqVlZU4HA5u3LhBampq
      6BcvBk3YhT516lS/+2mA1tZWmpqaSEhICHrOP2VkZHDu3Dmqq6tJSUkhMjJyMJYvBknYhZ6V
      lUV7ezslJSUAdHV1UVxcTHp6OiaTKeg5/5ScnExTUxOlpaVkZmYOzcmIkBlR9+hfffUVpaWl
      fmMrVqwA7of49ttvM3r0aFatWkVRUREnTpygq6uLhIQEli5d6tsmmDkajcbvDY9OpyMtLY2a
      mhqSkpIG+UxFqGm8YfprPY/Hw61btzAYDIwfP77fc0LF6XT6HlIvXbo0oH82Wv599L4bUVf0
      vtBqtQ/9xVKwc0R4GDGhFxQUDPcS/tWaNWuGewmiFyMmdIlIDETYvXURIhAJXShBQhdKkNCF
      EiR0oQQJXShBQhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0oQQJXShB
      QhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0
      oQQJXShBQhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0oQQJXShBQhdKkNCFEiR0oQQJXShBQhdK
      CNvQnU4nDQ0NdHR09DrH4/Fw8+ZN2tvbh3BlYjjohnsBoebxeDh8+DA//fQT48aNo62tjZkz
      Z/Lmm28SGRnpm2e1Wtm+fTsRERG4XC7i4+OxWCwYDAYA2traWLduHTqdjvz8fN/4323bto26
      ujry8vKYO3fukJ2j6Luwu6L/8MMP1NXVsWnTJjZu3MiHH37IrVu3OHbsmG9Od3c3hYWFzJkz
      h/z8fLZs2UJ3dzcHDx7021dkZCSJiYnU1NT0OI7D4aC+vp7k5GS8Xu+gn5cYmLALvby8nNzc
      XMaOHQuAyWRi0aJF/PLLL7jdbgCqq6uJjo5m3rx5AERFRbFkyRJqamro7Oz07Uur1ZKVlcXZ
      s2d7HKe6uppp06ZhMpnQaDRDcGZiIMIu9NbWViZOnOg3NmPGDNxuN42NjQBcvnyZtLQ0vznx
      8fHExMRgtVr9xtPT07l69Sp37tzxG6+srCQjI2MQzkAMhrALPTY2ltraWr+xiIgIJkyY4Hvo
      tNvtmM3mHtuazWbsdrvfmMFgYPr06VRVVfnGHA4H165d6/FlEf9dYfcw+uyzz3Lq1ClGjRpF
      SkoKf/zxB/X19dhsNt9VuaOjA6PR2GNbo9GIw+HoMZ6ZmUlZWRmzZ88G7t+2zJgxA71eH3AN
      Tqcz4HigffdHqPajkrALPScnB61Wy48//sjRo0cZP348iYmJaLVaTCYTAHq9HpfL1WNbl8sV
      MN7U1FT279+P3W7HZDJRWVnpiz6QQG9onE4nMTExAzizv4RqPyoJu9C1Wi05OTnk5OT4xjwe
      D++++y7jx48HYOzYsdhsth7b2mw2xowZ02M8KiqKlJQU3335jRs3SE1NHbyTECEXdvfogVRV
      VaHX65k0aRIAU6dO9bvnhvsPsU1NTSQkJATcR0ZGBufOnaO6upqUlBS/d/Livy/sQm9pafG9
      XQFoaGjgyy+/JDc3F632/ulmZWXR3t5OSUkJAF1dXRQXF5Oenu67vfmn5ORkmpqaKC0tJTMz
      c/BPRIRU2N26/Pnnn+zYsQO9Xo9Go8HhcLBw4UKeeeYZ35zRo0ezatUqioqKOHHiBF1dXSQk
      JLB06VLfHI1G4/d+XKfTkZaWRk1NDUlJSUN6TmLgNN4w/LVed3c3LS0tuN1uJk+ejE4X+Pvs
      8Xi4desWBoPBd/8+WJxOp+8h9dKlS6w9cLFf+9m8JIXk5ORQLk0JYXdFBxg1ahRxcXH/Ok+r
      1QY1T4x8YRV6QUHBsB5/zZo1w3p80buwCl1CE70Ju7cuQgQioQslSOhCCRK6UIKELpQgoQsl
      SOhCCRK6UIKELpQgoQslSOhCCRK6UIKELpQgoQslSOhCCRK6UIKELpQgoQslSOhCCRK6UIKE
      LpQgoQslSOhCCRK6UIKELpQgoQslSOhCCRK6UIKELpQgoQslSOhCCRK6UML/ASl6qiqu5cVr
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='179' name='Total number of deaths in top 5 countries' width='192'>
      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
      EDT/D0H23NIhfoVcAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
